version: 2.1
orbs:
  aws-cli: circleci/aws-cli@3.1.3

commands:
  install_awscli:
    description: Install AWS CLI v2
    steps:
      - run:
          name: Install AWS CLI v2
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install

  config_awscli:
    description: Config AWS CLI v2
    steps:
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_DEFAULT_REGION

  install_ansible:
    description: Install Ansible
    steps:
      - run:
          name: Install Ansible
          command: |
            sudo apt update
            sudo apt install software-properties-common -y
            sudo add-apt-repository --yes --update ppa:ansible/ansible
            sudo apt install ansible -y

jobs:
  create_infrastructure:
    docker: 
      - image: amazon/aws-cli
    steps:
      - checkout
      - config_awscli
      - run: 
          command: |
            aws cloudformation deploy  --stack-name DeployTest --region us-east-1 --template-file aws_cd_infra_test/CD_AWS_Test.yml --parameter-overrides file://aws_cd_infra_test/CD_AWS_Test.json --capabilities "CAPABILITY_IAM" "CAPABILITY_NAMED_IAM"

  Config_Machine:
    docker: 
      - image: cimg/base:stable
    environment:
      ANSIBLE_HOST_KEY_CHECKING: False
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["00:35:2d:41:87:37:9c:6e:25:9a:48:2d:9e:db:04:5f"]
      - install_ansible
      - install_awscli
      - config_awscli
      - run: 
          command: |
            echo "output = yaml" >> ~/.aws/config
            aws ec2 describe-instances --query 'Reservations[*].Instances[*].PublicIpAddress' --filters Name=instance-state-name,Values=running | cut -c 5- >> ansible_playbooks/inventory/hosts.txt
            ansible-playbook -i ansible_playbooks/inventory/hosts.txt -u ubuntu ansible_playbooks/Main.yml
      - persist_to_workspace:
          root: ./
          paths:
            - ansible_playbooks/inventory/hosts.txt

  Smoke_Testing:
    docker: 
      - image: alpine:latest
    steps:
      - run: apk add curl
      - attach_workspace:
          at: ./
      - run: 
          command: |
            while read p; do
              if curl $p
              then
                echo "******************** $p Working*************************"
              else
                echo "****************** $p Not-Working***********************"
              fi
            done <./ansible_playbooks/inventory/hosts.txt
            
workflows:
  aws_test:
    jobs:
      - create_infrastructure
      - Config_Machine:
          requires:
            - create_infrastructure
      - Smoke_Testing:
          requires:
            - Config_Machine